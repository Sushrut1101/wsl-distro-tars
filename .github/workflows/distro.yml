name: Distro tar generator

on:
  push:

jobs:
  generate-distros:
    runs-on: ubuntu-latest
    container:
      image: manjarolinux/base:latest

    steps:
    - name: Setup prerequisites
      run: |
        pacman -Syu --needed --noconfirm hub docker git
    - uses: actions/checkout@v3
    - name: Set date
      id: get-date
      run: |
        ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
        echo "date=$(/bin/date -u '+%d%m%Y%I%M')" >> $GITHUB_ENV
    - name: Generate tars
      run: |
        docker ps --filter status=exited -q | xargs docker rm || echo "Ignoring docker pruning"
        git config --global --add safe.directory /__w/wsl-distro-tars/wsl-distro-tars
        bash wsl-tar-gen.sh
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         tag_name: ${{ env.date }}
         release_name: WDT Release ${{ env.date }}
    - name: Upload alpine tar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./alpine-${{ env.date }}.tar
        asset_name: alpine-${{ env.date }}.tar
        asset_content_type: application/tar
    - name: Upload archlinux tar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./archlinux-${{ env.date }}.tar
        asset_name: archlinux-${{ env.date }}.tar
        asset_content_type: application/tar
    - name: Upload centos tar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./centos-${{ env.date }}.tar
        asset_name: centos-${{ env.date }}.tar
        asset_content_type: application/tar
    - name: Upload clearlinux tar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./clearlinux-${{ env.date }}.tar
        asset_name: clearlinux-${{ env.date }}.tar
        asset_content_type: application/tar
    - name: Upload debian tar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./debian-${{ env.date }}.tar
        asset_name: debian-${{ env.date }}.tar
        asset_content_type: application/tar
    - name: Upload fedora tar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./fedora-${{ env.date }}.tar
        asset_name: fedora-${{ env.date }}.tar
        asset_content_type: application/tar
    - name: Upload ubuntu tar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ubuntu-${{ env.date }}.tar
        asset_name: ubuntu-${{ env.date }}.tar
        asset_content_type: application/tar                              